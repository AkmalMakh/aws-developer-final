AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate Deployment using existing VPC and Subnets

Parameters:
  ProjectName:
    Type: String
    Default: akmal-aws-final
  ImageUrl:
    Type: String
    Default: 151182332702.dkr.ecr.us-east-1.amazonaws.com/akmal/webapp:latest
  DBName:
    Type: String
    Default: regiondb
  DBUsername:
    Type: String
    Default: admin
  DBPassword:
    Type: String
    Default: Admin123$
  VPC:
    Type: AWS::EC2::VPC::Id
    Default: vpc-03b0687b56e5e4284
  PublicSubnetA:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0c54a03469761cbd2
  PublicSubnetB:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-06743ac42e7cf5ad8
  PrivateSubnetA:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-08fde9a496b874bec
  PrivateSubnetB:
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0f75970e73d049f61

Resources:

  EcsCluster:
    Type: AWS::ECS::Cluster

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess

  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow HTTP and container traffic
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref AppSecurityGroup

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - !Ref PublicSubnetA
        - !Ref PublicSubnetB
      SecurityGroups:
        - !Ref AppSecurityGroup
      Scheme: internet-facing
      Type: application

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPC
      Port: 8080
      Protocol: HTTP
      TargetType: ip
      HealthCheckPath: /actuator/health

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${ProjectName}"
      RetentionInDays: 7

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities: [FARGATE]
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: webapp
          Image: !Ref ImageUrl
          Essential: true
          PortMappings:
            - ContainerPort: 8080
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: SPRING_DATASOURCE_URL
              Value: !Sub "jdbc:mysql://${MySQLInstance.Endpoint.Address}:${MySQLInstance.Endpoint.Port}/${DBName}"
            - Name: SPRING_DATASOURCE_USERNAME
              Value: !Ref DBUsername
            - Name: SPRING_DATASOURCE_PASSWORD
              Value: !Ref DBPassword

  EcsService:
    Type: AWS::ECS::Service
    DependsOn: ALBListener
    Properties:
      Cluster: !Ref EcsCluster
      LaunchType: FARGATE
      DesiredCount: 1
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PublicSubnetA
            - !Ref PublicSubnetB
          SecurityGroups:
            - !Ref AppSecurityGroup
          AssignPublicIp: ENABLED
      LoadBalancers:
        - ContainerName: webapp
          ContainerPort: 8080
          TargetGroupArn: !Ref TargetGroup

  MySQLInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      AllocatedStorage: 20
      DBInstanceClass: db.t4g.micro
      Engine: mysql
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !Ref AppSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Private subnets
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
